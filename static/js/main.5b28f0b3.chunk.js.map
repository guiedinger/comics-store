{"version":3,"sources":["components/Cart.jsx","components/ToolBar.jsx","components/Footer.jsx","components/ScrollToTop.jsx","services/api.js","services/helper.js","components/ComicCard.jsx","components/Paginator.jsx","pages/ComicsPage.jsx","components/Image.jsx","components/Item.jsx","components/List.jsx","pages/ComicPage.jsx","pages/CartPage.jsx","Routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["props","to","IconButton","aria-label","Badge","badgeContent","color","ShoppingCart","useStyles","makeStyles","theme","grow","flexGrow","logo","alignSelf","padding","background","fontFamily","logoLink","textDecoration","classes","AppBar","position","Container","maxWidth","Toolbar","className","Typography","variant","Cart","root","pathname","useLocation","useEffect","window","scrollTo","axiosInstance","axios","create","baseURL","interceptors","request","use","config","params","process","error","Promise","reject","thumbSrc","thumb","path","extension","comicPrice","prices","length","price","toLocaleString","style","currency","comicYear","dates","Date","date","now","getFullYear","width","isSmall","height","margin","transition","transform","title","maxHeight","overflow","content","display","flexFlow","details","justifyContent","boxSizing","actionArea","comicImage","paddingBottom","isLoading","matches","useMediaQuery","year","imageSrc","thumbnail","Card","Skeleton","animation","CardActionArea","id","CardMedia","image","CardContent","pageCount","pageLink","pageButton","minWidth","fontWeight","skeleton","lastPage","Math","ceil","totalComics","comicsByPage","firstListPage","currentPage","showedPages","pageList","Array","fill","map","e","i","reverse","isFirstPage","isLastPage","Paper","component","ArrowBack","page","key","activeStyle","Button","ArrowForward","alignItems","comicsContainer","useState","setIsLoading","comics","setComics","setTotalComics","useParams","currentDate","toISOString","slice","api","get","formatType","dateRange","limit","offset","then","res","newComics","data","results","total","comic","index","ComicCard","Paginator","flexShrink","breakpoints","down","src","alt","avatar","spacing","borderRadius","boxShadow","item","type","isListLoading","Avatar","name","split","pop","fullName","items","from","identifier","list","setList","setIsListLoading","Item","contentBox","up","setComic","Image","Box","List","palette","primary","main","secondary","ligth","ScrollToTop","ToolBar","exact","render","Footer","createMuiTheme","action","active","Boolean","location","hostname","match","ReactDOM","ThemeProvider","CssBaseline","Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b28f0b3.chunk.js","sourcesContent":["import React from 'react';\nimport { IconButton, Badge } from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nexport default (props) => {\n  return (\n    <Link to=\"/cart\">\n      <IconButton aria-label=\"show 4 new mails\" >\n        <Badge badgeContent={3} color=\"secondary\">\n          <ShoppingCart color=\"action\" />\n        </Badge>\n      </IconButton>\n    </Link>\n  );\n}\n","import React from 'react';\nimport { AppBar, Toolbar, Typography, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Cart from './Cart';\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  logo: {\n    alignSelf: 'flex-start',\n    padding: '12px',\n    background: '#EC1D24',\n    fontFamily: 'Anton',\n  },\n  logoLink: {\n    textDecoration: 'none',\n    color: '#FFFFFF',\n  }\n}));\n\nexport default () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"sticky\">\n      <Container maxWidth=\"md\">\n        <Toolbar>\n          <Link to=\"/\" className={classes.logoLink}>\n            <Typography variant=\"h4\" className={classes.logo}>\n              COMICS STORE\n            </Typography>\n          </Link>\n          <div className={classes.grow}></div>\n          <Cart />\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { AppBar, Toolbar, Typography, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '5px',\n  },\n}));\n\nexport default () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Container maxWidth=\"md\">\n        <Toolbar>\n          <Typography>Data provided by Marvel. © 2020 MARVEL</Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://gateway.marvel.com:443/v1/public/',\n});\n\naxiosInstance.interceptors.request.use((config) => {\n    config.params = config.params || {};\n    config.params['apikey'] = process.env.REACT_APP_API_KEY;\n    return config;\n  }, (error) => {\n    return Promise.reject(error);\n  });\n\nexport default axiosInstance;","const thumbSrc = (thumb) =>\n  (\n    thumb\n    && thumb.path\n    && thumb.extension\n  ) ? (\n      `${thumb.path\n      }/portrait_uncanny.${\n      thumb.extension}`\n    ) : (\n      'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available/portrait_uncanny.jpg'\n    );\n\nconst avatarSrc = (thumb) =>\n  (\n    thumb\n    && thumb.path\n    && thumb.extension\n    && thumb.path.split(\"/\").pop() !== \"image_not_available\"\n  ) ? (\n      `${thumb.path\n      }/standard_xlarge.${\n      thumb.extension}`\n    ) : (null);\n\n\nconst comicPrice = (prices) => ((prices && prices.length && prices[0].price) || 0)\n  .toLocaleString('en', { style: 'currency', currency: 'USD' });\n\nconst comicYear = (dates) => new Date((dates && dates.length && dates[0].date)\n  || Date.now()).getFullYear();\n\nexport { thumbSrc, avatarSrc, comicPrice, comicYear };","import React from 'react';\nimport { Card, CardMedia, CardContent, CardActionArea, Typography, useMediaQuery } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport { Link } from 'react-router-dom';\nimport { thumbSrc, comicPrice, comicYear } from '../services/helper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: props => props.isSmall ? '90%' : '350px',\n    height: props => props.isSmall ? 'auto' : '225px',\n    margin: '15px',\n    transition: 'transform 0.5s ease-out',\n    '&:hover': {\n      transform: 'scale(1.05)',\n    }\n  },\n  title: {\n    maxHeight: '6rem',\n    overflow: 'hidden',\n  },\n  content: {\n    display: 'flex',\n    flexFlow: props => props.isSmall ? 'column' : 'row nowrap',\n  },\n  details: {\n    display: 'flex',\n    flexFlow: 'column',\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    width: props => props.isSmall ? 'auto' : '200px',\n  },\n  actionArea: {\n    width: props => props.isSmall ? '100%' : '150px',\n    height: props => props.isSmall ? 'auto' : '225px',\n  },\n  comicImage: {\n    width: props => props.isSmall ? '100%' : '150px',\n    height: props => props.isSmall ? 'auto' : '225px',\n    paddingBottom: props => props.isSmall ? '150%' : '0px',\n    alignSelf: 'center',\n  }\n}));\nexport default (props) => {\n  const { isLoading = false } = props;\n  const matches = useMediaQuery('(min-width:375px)');\n  const classes = useStyles({ isSmall: !matches });\n  const price = comicPrice(props.prices);\n  const year = comicYear(props.dates);\n  const imageSrc = thumbSrc(props.thumbnail);\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.content}>\n        {\n          isLoading ? (\n            <Skeleton animation=\"wave\" variant=\"rect\" className={classes.comicImage} />\n          ) : (\n              <CardActionArea className={classes.actionArea}>\n                <Link to={`/comic/${props.id}`}>\n                  <CardMedia\n                    className={classes.comicImage}\n                    image={imageSrc}\n                    title={props.title}\n                  />\n                </Link>\n              </CardActionArea>\n            )\n        }\n        <CardContent className={classes.details}>\n          <div>\n            {\n              isLoading ? (\n                <>\n                  <Skeleton animation=\"wave\" height={26} width=\"90%\" />\n                  <Skeleton animation=\"wave\" height={20} width=\"25%\" />\n                  <Skeleton animation=\"wave\" height={20} width=\"50%\" />\n                </>\n              ) : (\n                  <>\n                    <Typography className={classes.title}>\n                      {props.title}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                      {year}\n                    </Typography>\n                    {!!props.pageCount &&\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {props.pageCount} pages\n                      </Typography>\n                    }\n                  </>\n                )\n            }\n\n          </div>\n          {\n            isLoading ? (\n              <Skeleton animation=\"wave\" height={30} width=\"40%\" />\n            ) : (\n                <Typography variant=\"h6\">\n                  {price}\n                </Typography>\n              )\n          }\n        </CardContent>\n      </div>\n    </Card>\n  );\n}","import React from 'react';\nimport { Paper, IconButton, Button } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  pageLink: {\n    textDecoration: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#202020',\n  },\n  pageButton: {\n    minWidth: '35px',\n    color: 'inherit',\n    fontWeight: 'inherit'\n  },\n  skeleton: {\n    width: '300px',\n    height: '48px',\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n  const { isLoading = false } = props;\n  const lastPage = Math.ceil(props.totalComics / props.comicsByPage);\n  const showedPages = 5;\n  const firstListPage = Math.ceil(props.currentPage + 1 - (showedPages / 2)) > 0 ?\n    Math.ceil(props.currentPage + 1 - (showedPages / 2)) : 1;\n  const isFinalListPage = (firstListPage + showedPages) > lastPage;\n  const pageList = isFinalListPage ? \n    new Array(showedPages).fill(0).map((e, i) => lastPage - i).reverse() :\n    new Array(showedPages).fill(0).map((e, i) => i + firstListPage);\n  const isFirstPage = props.currentPage === 0;\n  const isLastPage = props.currentPage === lastPage - 1;\n\n  return (\n    <Paper className={classes.root}>\n    {isLoading ? (\n      <Skeleton animation=\"wave\" variant=\"rect\" className={classes.skeleton} />\n    ) : (\n      <>\n        {!isFirstPage && (\n          <Link to={`/${props.currentPage}`}>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"arrow back\"\n              component=\"span\"\n            >\n              <ArrowBack />\n            </IconButton>\n          </Link>\n        )}\n        {pageList.map((page, i) => (\n          <NavLink\n            key={i}\n            className={classes.pageLink}\n            to={`/${page}`}\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\"\n            }}\n          >\n            <Button className={classes.pageButton}>{page}</Button>\n          </NavLink>\n        ))}\n        {!isLastPage && (\n          <Link to={`/${props.currentPage + 2}`}>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"arrow forward\"\n              component=\"span\"\n            >\n              <ArrowForward />\n            </IconButton>\n          </Link>\n        )}\n      </>\n    )}\n  </Paper>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport api from './../services/api';\nimport ComicCard from './../components/ComicCard';\nimport Paginator from './../components/Paginator';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '50px 0px',\n    display: 'flex',\n    alignItems: 'center',\n    flexFlow: 'column'\n  },\n  comicsContainer: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'center',\n  },\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const [isLoading, setIsLoading ] = useState(true);\n  const [comics, setComics] = useState(new Array(20).fill({}));\n  const [totalComics, setTotalComics] = useState(0);\n  const { page } = useParams();\n  const comicsByPage = 20;\n  const currentPage = !!page && page > 0 ? page - 1 : 0;\n  const currentDate = new Date().toISOString().slice(0, 10);\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.get('comics', {\n      params: {\n        formatType: 'comic',\n        dateRange: `1900-01-01,${currentDate}`,\n        limit: comicsByPage,\n        offset: comicsByPage * currentPage,\n      },\n    })\n      .then(res => {\n        const newComics = res.data.data.results;\n        setComics(newComics);\n        setTotalComics(res.data.data.total);\n        setIsLoading(false);\n      });\n  }, [currentPage, currentDate]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.comicsContainer}>\n        {comics && comics.map((comic, index) =>\n          <ComicCard key={isLoading ? index : comic.id} {...comic} isLoading={isLoading} />)}\n      </div>\n      <Paginator\n        currentPage={currentPage}\n        comicsByPage={comicsByPage}\n        totalComics={totalComics}\n        isLoading={isLoading}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '200px',\n    height: '300px',\n    flexShrink: 0,\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      height: 'auto',\n    },\n    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);',\n  },\n  image: {\n    width: '100%',\n    paddingBottom: props => props.isLoading ? '150%' : '0px',\n  }\n}));\n\nexport default ({ src, alt, isLoading = false }) => {\n  const classes = useStyles({ isLoading: isLoading });\n\n  return (\n    <div className={classes.root}>\n      {isLoading ?\n        (<Skeleton animation=\"wave\" variant=\"rect\" className={classes.image} />)\n        :\n        (<img src={src} alt={alt} className={classes.image} />)\n      }\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport { Typography, Avatar } from '@material-ui/core';\nimport { avatarSrc } from '../services/helper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row',\n    alignItems: 'center',\n    width: '250px',\n  },\n  avatar: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    margin: theme.spacing(1),\n    borderRadius: '50%',\n    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);',\n  },\n}));\n\nexport default ({ item, type, isListLoading }) => {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      {isListLoading ?\n        (\n          <>\n            <Skeleton animation=\"wave\" variant=\"rect\" className={classes.avatar} />\n            <Skeleton animation=\"wave\" height={32} width=\"3.5rem\" />\n          </>\n        ) : (\n          <>\n            <Avatar alt={item.name} className={classes.avatar} src={avatarSrc(item.thumbnail)} />\n            <Typography >\n              {type !== \"creators\" && item.name}\n              {type === \"creators\" && item.fullName}\n            </Typography>\n          </>\n        )\n      }\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport { Typography } from '@material-ui/core';\nimport api from '../services/api';\nimport Item from './Item';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  },\n  items: {\n    display: 'flex',\n    flexFlow: 'row wrap'\n  }\n}));\n\nexport default ({ from = \"comics\", identifier, type, isLoading }) => {\n  const classes = useStyles();\n  const [list, setList] = useState([]);\n  const [isListLoading, setIsListLoading] = useState(true);\n  useEffect(() => {\n      setIsListLoading(true);\n      api.get(`${from}/${identifier}/${type}`)\n        .then((res) => {\n          setList(res.data.data.results);\n          setIsListLoading(false);\n        });\n    }, [identifier, type, from]);\n  return (\n    <div className={classes.root}>\n      {!isLoading && !isListLoading && list && list.length > 0 &&\n        <>\n          <Typography variant=\"h5\">\n            {type === \"characters\" && \"Characters\"}\n            {type === \"creators\" && \"Creators\"}\n          </Typography>\n          <div className={classes.items}>\n            {list.map(i => (\n              <Item item={i} key={i.id} type={type} />\n            ))}\n          </div>\n        </>\n      }\n      {(isLoading || isListLoading) &&\n        <>\n          <Skeleton animation=\"wave\" height={41} width=\"8rem\" />\n          <div className={classes.items}>\n            {new Array(3).fill({}).map((e, i) => (\n              <Item isListLoading key={i} />\n            ))}\n          </div>\n        </>\n      }\n    </div >\n  );\n}","import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { thumbSrc, comicPrice, comicYear } from '../services/helper';\nimport Image from '../components/Image';\nimport List from '../components/List';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '50px 0px',\n    padding: '1rem',\n    display: 'flex',\n    flexFlow: 'row',\n    [theme.breakpoints.down('sm')]: {\n      flexFlow: 'column',\n    },\n  },\n  contentBox: {\n    padding: '1rem',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      padding: '0rem 1.5rem 1rem 1rem'\n    },\n  },\n}));\n\nexport default () => {\n  const { id } = useParams();\n  const classes = useStyles();\n  const [comic, setComic] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.get(`comics/${id}`)\n      .then((res) => {\n        setComic(res.data.data.results[0]);\n        setIsLoading(false);\n      });\n  }, [id]);\n\n  return (\n    <Paper className={classes.root}>\n      <Image src={thumbSrc(comic.thumbnail)} alt={comic.title} isLoading={isLoading} />\n      <Box className={classes.contentBox}>\n        {isLoading ?\n          (\n            <>\n              <Skeleton animation=\"wave\" height={41} width=\"90%\" />\n              <Skeleton animation=\"wave\" height={32} width=\"3rem\" />\n              <Skeleton animation=\"wave\" height={32} width=\"3.5rem\" />\n            </>\n          ) : (\n            <>\n              <Typography variant=\"h4\">\n                {comic.title}\n              </Typography>\n              <Typography variant=\"h6\">\n                {comicYear(comic.dates)}\n              </Typography>\n              <Typography variant=\"h6\">\n                {comicPrice(comic.prices)}\n              </Typography>\n            </>\n          )\n        }\n        <List from=\"comics\" identifier={id} type=\"characters\" isLoading={isLoading} />\n        <List from=\"comics\" identifier={id} type=\"creators\" isLoading={isLoading} />\n      </Box>\n    </Paper>\n  );\n}\n","import React from 'react';\n\nexport default (props) => {\n  return (\n    <div>Cart</div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\n\nimport ToolBar from './components/ToolBar';\nimport Footer from './components/Footer';\nimport ScrollToTop from './components/ScrollToTop';\nimport Comics from './pages/ComicsPage';\nimport Comic from './pages/ComicPage';\nimport Cart from './pages/CartPage';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  '@global': {\n    '::-webkit-scrollbar': {\n      width: '1rem',\n    },\n    '::-webkit-scrollbar-track': {\n      background: theme.palette.primary.main,\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: theme.palette.secondary.main,\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: theme.palette.secondary.ligth,\n    }\n  }\n}));\n\n\n\nexport default () => {\n  const classes = useStyles();\n  return (\n    <Router>\n      <ScrollToTop />\n      <ToolBar />\n      <Container maxWidth=\"md\" className={classes.root}>\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/1\" />\n          )} />\n          <Route path=\"/cart\">\n            <Cart />\n          </Route>\n          <Route path=\"/comic/:id\">\n            <Comic />\n          </Route>\n          <Route path=\"/:page\">\n            <Comics />\n          </Route>\n        </Switch>\n      </Container>\n      <Footer />\n    </Router>\n  );\n}","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Routes from './Routes'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#202020',\n    },\n    secondary: {\n      main: '#EC1D24',\n    },\n    action: {\n      active: '#FFFFFF',\n    }\n  },\n});\n\nexport default () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Routes />\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}